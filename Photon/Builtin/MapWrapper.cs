// Generated by github.com/davyxu/PhotonSharp
// DO NOT EDIT!!
using Photon;
using System;

namespace Photon
{
	[NativeWrapperClass(typeof(Photon.Map))]
	public class MapWrapper
	{
		[NativeEntry(NativeEntryType.ClassMethod)]
		public static int ContainsKey( VMachine phoVM )
		{
			var phoClassIns = phoVM.DataStack.GetNativeInstance<Photon.Map>(0);
			
			var k = phoVM.DataStack.GetValue(1);
			
			var phoRetArg = phoClassIns.ContainsKey( k );

			phoVM.DataStack.PushBool( phoRetArg );
			
			return 1;
		}
		
		[NativeEntry(NativeEntryType.ClassMethod)]
		public static int ContainsValue( VMachine phoVM )
		{
			var phoClassIns = phoVM.DataStack.GetNativeInstance<Photon.Map>(0);
			
			var k = phoVM.DataStack.GetValue(1);
			
			var phoRetArg = phoClassIns.ContainsValue( k );

			phoVM.DataStack.PushBool( phoRetArg );
			
			return 1;
		}
		
		[NativeEntry(NativeEntryType.ClassMethod)]
		public static int Clear( VMachine phoVM )
		{
			var phoClassIns = phoVM.DataStack.GetNativeInstance<Photon.Map>(0);
			
			phoClassIns.Clear(  );

			
			return 0;
		}
		
	}
}
